uniform sampler2D texture0;

varying highp vec3 posVarying;
varying mediump vec3 normalVarying;
varying mediump vec2 uvVarying;
varying mediump vec3 lightVarying;
varying mediump vec3 colorVarying;
varying highp vec4 worldPosition;

// these must appear exactly as they are to work, spaces and all.
// they will be filled in by AGK
mediump vec3 GetPSLighting( mediump vec3 normal, highp vec3 pos );
mediump vec3 ApplyFog( mediump vec3 color, highp vec3 pointPos );

uniform vec4 clippingPlane;

void main()
{ 
    mediump vec3 norm = normalize(normalVarying);
    mediump vec3 light = lightVarying + GetPSLighting( norm, posVarying ); 
    
	if (dot(worldPosition,clippingPlane)>0.0)
		discard;
	
    mediump vec3 color = colorVarying;
    color = texture2D(texture0, uvVarying).rgb * color * light;
    
	// apply normalmap
	vec4 normalColor = texture2D(texture0, uvVarying);
	vec3 normal = vec3(normalColor.r * 2.0 - 1.0, normalColor.b, normalColor.g * 2.0 -1.0);
	normal = normalize(normal);
	
	// color = mix(color, normalColor.rgb,0.5);
	
    color = ApplyFog( color, posVarying );    
	gl_FragColor = vec4(color,1.0);
}

